{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","C_Users_MCB006_Desktop_Andrzej_Ch_CODING_FCC_React_REACT_APP_calc_mcb_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_MCB006_Desktop_Andrzej_Ch_CODING_FCC_React_REACT_APP_calc_mcb_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_MCB006_Desktop_Andrzej_Ch_CODING_FCC_React_REACT_APP_calc_mcb_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","trueIfExpression","handleDigits","bind","C_Users_MCB006_Desktop_Andrzej_Ch_CODING_FCC_React_REACT_APP_calc_mcb_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleDecimal","handleOperators","clearDisplay","equalsExecute","passedVar","arrayOfDigits","split","length","setState","includes","operatorVar","lastString","deletedLast","slice","join","console","log","eval","toString","react__WEBPACK_IMPORTED_MODULE_6___default","Display","Component","className","style","height","marginLeft","marginRight","backgroundColor","id","width","minWidth","borderRadius","onClick","fontFamily","fontSize"],"mappings":"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","file":"static/js/main.c74b0acf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {Component} from 'react';\n\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        display: '0',\n        //if false(after pressing \"=\") -> display is cleared before entering numbers\n        trueIfExpression: true\n      }\n     \n      this.handleDigits = this.handleDigits.bind(this);\n      this.handleDecimal = this.handleDecimal.bind(this);\n      this.handleOperators = this.handleOperators.bind(this);\n      this.clearDisplay = this.clearDisplay.bind(this);\n      this.equalsExecute = this.equalsExecute.bind(this);\n     \n    }\n \n    handleDigits(passedVar) {\n          // splits display to groups of numbers\n      let arrayOfDigits = this.state.display.split(/\\+|-|\\*|\\//);\n          //avois overflowing of the display\n      if (this.state.display.length === 24) {\n      return;\n      }  \n\n      if(this.state.trueIfExpression) {\n        \n        if (arrayOfDigits[arrayOfDigits.length-1] === '0' && passedVar === '0') {\n        return;\n        } \n    \n     //clears display first if it shows \"0\"\n      if (arrayOfDigits[arrayOfDigits.length-1] === '0') {\n        this.setState(\n          {display: '' + passedVar}\n        )  \n      } else {\n        this.setState(\n          {display: this.state.display + passedVar}\n        )\n      }\n\n      } else { //// ...if trueIfexpression is false (if \"=\" was just pressed)\n        if (arrayOfDigits[arrayOfDigits.length-1] === '0') {\n          this.setState(\n            {display: '' + passedVar, trueIfExpression: true}\n           )  \n       } else {\n          this.setState(\n            {display: passedVar, trueIfExpression: true}\n          )\n        }\n      }\n    }\n          \n    handleDecimal() {\n\n      let arrayOfDigits = this.state.display.split(/\\+|-|\\*|\\//);\n     \n      if (this.state.display.length === 24) {\n        return;\n      }  \n\n\n      if (!arrayOfDigits[arrayOfDigits.length-1].includes('.') && arrayOfDigits[arrayOfDigits.length-1].length !== 0) {\n        this.setState(\n          {display: this.state.display + '.'}\n        )\n      }\n    }\n\n    handleOperators(operatorVar) {\n\n      let lastString = this.state.display[this.state.display.length-1];\n\n      if (this.state.display.length === 24) {\n        return;\n      }  \n  \n      if (lastString !== '+' && lastString !== '-' && lastString !== '*' && lastString !== '/' && lastString !== '.' ) {\n        this.setState(\n          {display: this.state.display + operatorVar, trueIfExpression: true}\n        )\n\n      } else {\n        // display without last symbol\n        let deletedLast = this.state.display.split(\"\").slice(0, this.state.display.length-1).join('' + '')\n        console.log(deletedLast);\n\n        this.setState(\n          {display: deletedLast + operatorVar, trueIfExpression: true} /// comment\n        )\n      }\n    }\n\n    clearDisplay () {\n      this.setState(\n        {display: '0'}\n      )\n    }\n\n    equalsExecute() {\n\n      let lastString = this.state.display[this.state.display.length-1];\n      if (lastString !== '+' && lastString !== '-' && lastString !== '*' && lastString !== '/' ) {\n\n      this.setState (\n          // eslint-disable-next-line\n         {display: eval(this.state.display).toString(), trueIfExpression: false}\n       )\n      } \n    }    \n\n    render() {\n      return (\n        <Display display={this.state.display} handleDigits={this.handleDigits} clearDisplay={this.clearDisplay} handleDecimal={this.handleDecimal}\n        equalsExecute={this.equalsExecute} handleOperators={this.handleOperators}\n        />\n      )\n    }\n  }\n\n function Display (props) {\n\n    return (\n\n      <div className=\"App container-fluid\" >\n          <div className=\"d-flex align-items-center\" style={{height: '100vh', marginLeft: '-15px', marginRight: '-15px', backgroundColor: 'whitesmoke' }}>\n            <div id=\"drum-machine\" className=\"mx-auto text-center\" style={{width: '350px', height: '420px', minWidth: '350px', borderRadius: '5px', backgroundColor: 'whitesmoke'}}>\n              <br/>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('7')} id=\"seven\" >7</button>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('8')}   id=\"eight\" >8</button>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('9')}  id=\"nine\" >9</button>\n              <button  className=\"btn  m-1\" onClick={() => props.clearDisplay()} id=\"clear\" ><p>c</p></button>\n              <div className=\"w-100\"></div>\n              <button className=\"btn  m-1\" onClick={() => props.handleDigits('4')} id=\"four\" >4</button>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('5')}   id=\"five\" >5</button>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('6')}   id=\"six\">6</button>\n              <button  className=\"btn  m-1 operator\" onClick={() => props.handleOperators('*')} style={{width: '30.5px'}}   id=\"multiply\"><p>*</p></button>\n              <button  className=\"btn  m-1 operator\" onClick={() => props.handleOperators('/')} style={{width: '30.5px'}}    id=\"divide\"><p>/</p></button>\n              <div className=\"w-100\"></div>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('1')}  id=\"one\" >1</button>\n              <button className=\"btn  m-1\" onClick={() => props.handleDigits('2')}   id=\"two\">2</button>\n              <button  className=\"btn  m-1\"  onClick={() => props.handleDigits('3')}  id=\"three\">3</button>\n              <button  className=\"btn  m-1 operator\" onClick={() => props.handleOperators('+')} style={{width: '30.5px'}}   id=\"add\"><p>+</p></button>\n              <button  className=\"btn  m-1 operator\" onClick={() => props.handleOperators('-')} style={{width: '30.5px'}}  id=\"subtract\"><p>-</p></button>\n              <div className=\"w-100\"></div>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDigits('0')} style={{width: '148px'}}  id=\"zero\">0</button>\n              <button  className=\"btn  m-1\" onClick={() => props.handleDecimal()}   id=\"decimal\">.</button>\n              <button  className=\"btn  m-1 operator\" onClick={() => props.equalsExecute()} id=\"equals\"   ><p>=</p></button>\n              <br/><br/>\n              <div className=\"mx-auto\" style={{width: '304px', backgroundColor: 'black', borderRadius: '3px'}}>\n              <p className=\"mx-auto text-center\" style={{fontFamily: 'droid-serif, sant-serif', fontSize: '1.5em' }} id='display'>{props.display}</p>\n              </div>\n          </div>\n        </div>\n      </div>\n        \n    )\n\n } \n\nexport default App;"],"sourceRoot":""}